{"version":3,"file":"static/js/254.fc83e472.chunk.js","mappings":"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","sources":["constants/typeToast.js","firebase.config.js","components/registerForm/RegisterForm.jsx","components/loginForm/LoginForm.jsx","components/resetPasswordForm/ResetPasswordForm.jsx","pages/login/LoginPage.jsx","utils/firebaseErrorMessage.js","utils/utils.js"],"sourcesContent":["export const TYPE_TOAST = Object.freeze({\r\n   SUCCESS: 'success',\r\n   INFO: 'info',\r\n   WARNING: 'warn',\r\n   ERROR: 'error'\r\n});","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n   apiKey: \"AIzaSyAn7VisTvwsAHIdUGUVMx0Pedt7mIS8a1o\",\r\n   authDomain: \"shop-f0240.firebaseapp.com\",\r\n   projectId: \"shop-f0240\",\r\n   storageBucket: \"shop-f0240.appspot.com\",\r\n   messagingSenderId: \"202475553106\",\r\n   appId: \"1:202475553106:web:90685b90e3c1bef5453a8b\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport default app","import React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\r\nimport { auth } from '../../firebase.config';\r\nimport { notification } from '../../utils/utils';\r\nimport { TYPE_TOAST } from '../../constants/typeToast';\r\nimport { firebaseErrorMessage } from '../../utils/firebaseErrorMessage';\r\n\r\nfunction RegisterForm({ toggleForm, showLoader, hideLoader }) {\r\n   const [userName, setUserName] = useState('');\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const [passwordConfirm, setPasswordConfirm] = useState('');\r\n\r\n   const signUpUser = (e) => {\r\n      e.preventDefault();\r\n      if ((userName.length || email.length || password.length || passwordConfirm.length) === 0) {\r\n         notification('please fill in all fields', TYPE_TOAST.ERROR)\r\n      }\r\n      else if ((password.length && passwordConfirm.length) < 6) {\r\n         notification('The password must be at least 6 characters in length', TYPE_TOAST.INFO)\r\n      }\r\n      else if (password !== passwordConfirm) {\r\n         notification('passwords do not match', TYPE_TOAST.ERROR)\r\n      }\r\n      else {\r\n         showLoader()\r\n         createUserWithEmailAndPassword(auth, email, password)\r\n            .then(() => {\r\n               hideLoader();\r\n               setUserName('')\r\n               setEmail('')\r\n               setPassword('')\r\n               setPasswordConfirm('')\r\n               notification('Registration was successful', TYPE_TOAST.SUCCESS);\r\n            })\r\n            .then(() => {\r\n               updateProfile(auth.currentUser, {\r\n                  displayName: userName\r\n               });\r\n               toggleForm('login');\r\n            })\r\n            .catch((error) => {\r\n               hideLoader()\r\n               const errorMessage = error.message\r\n               firebaseErrorMessage(errorMessage)\r\n            });\r\n      }\r\n   }\r\n\r\n\r\n   return (\r\n      <div className='registerForm pt-2 pb-1'>\r\n         <h3 className='pageTitle py-2'>Sign Up Now</h3>\r\n         <form className='SignUpForm ' onSubmit={signUpUser}>\r\n            <div className='inputWrap py-4'>\r\n               <div className='inputGroup px-2 '>\r\n                  <label htmlFor=\"name\">name:</label>\r\n                  <input\r\n                     type=\"text\"\r\n                     name='name'\r\n                     value={userName}\r\n                     placeholder='your name'\r\n                     id='userName'\r\n                     onChange={e => setUserName(e.target.value)}\r\n                  />\r\n               </div>\r\n               <div className='inputGroup px-2 '>\r\n                  <label htmlFor=\"email\">email:</label>\r\n                  <input\r\n                     type=\"email\"\r\n                     name='email'\r\n                     value={email}\r\n                     placeholder='youremail@mail.com'\r\n                     id='email'\r\n                     onChange={e => setEmail(e.target.value)}\r\n                  />\r\n               </div>\r\n               <div className='inputGroup px-2 '>\r\n                  <label htmlFor=\"password\">password:</label>\r\n                  <input\r\n                     type=\"password\"\r\n                     name='password'\r\n                     value={password}\r\n                     autoComplete=\"on\"\r\n                     placeholder='********'\r\n                     id='password'\r\n                     onChange={e => setPassword(e.target.value)}\r\n                  />\r\n               </div>\r\n               <div className='inputGroup px-2 '>\r\n                  <label htmlFor=\"passConfirm\">confirm password:</label>\r\n                  <input\r\n                     type=\"password\"\r\n                     name='passwordConfirm'\r\n                     value={passwordConfirm}\r\n                     autoComplete=\"on\"\r\n                     placeholder='********'\r\n                     id='passwordConfirm'\r\n                     onChange={e => setPasswordConfirm(e.target.value)}\r\n                  />\r\n               </div>\r\n            </div>\r\n            <button type='submit' className=\"loginBtn signUpBtn p-0\">\r\n               <h4>Register Now</h4>\r\n            </button>\r\n         </form>\r\n         <h6 className='questionLink pt-4' onClick={() => toggleForm('login')}>Already have an account? Login here.</h6>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default RegisterForm","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport { GoogleAuthProvider, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\r\nimport { auth } from '../../firebase.config';\r\nimport { firebaseErrorMessage } from '../../utils/firebaseErrorMessage';\r\nimport { TYPE_TOAST } from '../../constants/typeToast';\r\nimport { notification } from '../../utils/utils';\r\nimport { ROUTES } from '../../routing/routes';\r\nimport { setActiveUser } from '../../redux/slice/authSlice';\r\n\r\n\r\nfunction LoginForm({ toggleForm, showLoader, hideLoader }) {\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const navigate = useNavigate()\r\n   const dispatch = useDispatch();\r\n\r\n   const loginUser = (e) => {\r\n      e.preventDefault();\r\n      if ((email.length || password.length) === 0) {\r\n         notification('please fill in all fields', TYPE_TOAST.ERROR);\r\n      } else {\r\n         showLoader();\r\n         signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n               const user = userCredential.user;\r\n               setEmail('')\r\n               setPassword('')\r\n               successfulResultHandler(user)\r\n            })\r\n            .catch((error) => {\r\n               hideLoader();\r\n               const errorMessage = error.message;\r\n               firebaseErrorMessage(errorMessage);\r\n            });\r\n      }\r\n   }\r\n\r\n   const provider = new GoogleAuthProvider();\r\n\r\n   const signInWithGoogle = () => {\r\n      showLoader()\r\n      signInWithPopup(auth, provider)\r\n         .then((result) => {\r\n            const user = result.user;\r\n            successfulResultHandler(user)\r\n         }).catch((error) => {\r\n            hideLoader();\r\n            const errorMessage = error.message;\r\n            firebaseErrorMessage(errorMessage);\r\n         });\r\n   }\r\n\r\n   const successfulResultHandler = (userInfo) => {\r\n      hideLoader();\r\n      notification('login successful', TYPE_TOAST.SUCCESS);\r\n      dispatch(setActiveUser({\r\n         userPhoto: userInfo.photoURL,\r\n         email: userInfo.email,\r\n         userName: userInfo.displayName,\r\n         userId: userInfo.uid,\r\n      }))\r\n      navigate(ROUTES.index)\r\n   }\r\n\r\n   return (\r\n      <div className='loginForm pt-2 pb-1'>\r\n         <h3 className='pageTitle py-2'>Sign in now</h3>\r\n         <div className=\"loginBtn px-3 py-2\" onClick={signInWithGoogle}>\r\n            <div className=\"loginBtnIcon\">\r\n               <FcGoogle />\r\n            </div>\r\n            <h4 className='m-0'>Google</h4>\r\n         </div>\r\n         <h6 className='offerText py-3'>\r\n            <span className='px-2 fw-normal'>or sign in with email</span>\r\n         </h6>\r\n         <form className='SignInForm' onSubmit={loginUser}>\r\n            <div className='inputWrap'>\r\n               <div className='inputGroup px-2 '>\r\n                  <label htmlFor=\"email\">email:</label>\r\n                  <input\r\n                     type=\"email\"\r\n                     name='email'\r\n                     value={email}\r\n                     placeholder='youremail@mail.com'\r\n                     id='email'\r\n                     onChange={e => setEmail(e.target.value)}\r\n                  />\r\n               </div>\r\n               <div className='inputGroup px-2 '>\r\n                  <label htmlFor=\"password\">password:</label>\r\n                  <input\r\n                     type=\"password\"\r\n                     name='password'\r\n                     value={password}\r\n                     autoComplete=\"on\"\r\n                     placeholder='********'\r\n                     id='password'\r\n                     onChange={e => setPassword(e.target.value)}\r\n                  />\r\n               </div>\r\n            </div>\r\n            <button type='submit' className=\"loginBtn signUpBtn p-0\">\r\n               <h4>Login</h4>\r\n            </button>\r\n         </form>\r\n         <div className=\"questionLinkWrap pt-4\">\r\n            <h6 className=\"questionLink\" onClick={() => toggleForm('registration')}>Don`t have an account? Register here.</h6>\r\n            <h6 className=\"questionLink\" onClick={() => toggleForm('resetPassword')}>Forgot your password? Reset here.</h6>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\nimport { sendPasswordResetEmail } from 'firebase/auth';\r\nimport { auth } from '../../firebase.config';\r\nimport { firebaseErrorMessage } from '../../utils/firebaseErrorMessage';\r\nimport { notification } from '../../utils/utils';\r\nimport { TYPE_TOAST } from '../../constants/typeToast';\r\n\r\nfunction ResetPasswordForm({ toggleForm, showLoader, hideLoader }) {\r\n   const [email, setEmail] = useState('');\r\n   const resetPassword = (e) => {\r\n      e.preventDefault();\r\n      showLoader()\r\n      sendPasswordResetEmail(auth, email)\r\n         .then(() => {\r\n            hideLoader()\r\n            notification('Check your email for the reset link', TYPE_TOAST.SUCCESS)\r\n            setEmail('')\r\n         })\r\n         .catch((error) => {\r\n            hideLoader()\r\n            const errorMessage = error.message;\r\n            firebaseErrorMessage(errorMessage);\r\n         });\r\n   }\r\n   return (\r\n      <div className='loginForm pt-2 pb-1'>\r\n         <h3 className='pageTitle py-2'>Reset Password</h3>\r\n         <form className='SignInForm' onSubmit={resetPassword}>\r\n            <div className='inputWrap py-3'>\r\n               <label htmlFor=\"email\">email:</label>\r\n               {' '}\r\n               <input\r\n                  type=\"email\"\r\n                  name='email'\r\n                  value={email}\r\n                  placeholder='youremail@mail.com'\r\n                  id='email'\r\n                  onChange={e => setEmail(e.target.value)}\r\n               />\r\n            </div>\r\n            <button type='submit' className=\"loginBtn signUpBtn p-0\">\r\n               <h4>Reset Password</h4>\r\n            </button>\r\n         </form>\r\n         <div className=\"questionLinkWrap pt-4 \">\r\n            <h6 className='questionLink' onClick={() => toggleForm('login')}>Already have an account? Login here.</h6>\r\n            <h6 className=\"questionLink\" onClick={() => toggleForm('registration')}>Don`t have an account? Register here.</h6>\r\n         </div>\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ResetPasswordForm","import React, { useState } from 'react'\r\nimport Loader from '../../components/loader/Loader';\r\nimport RegisterForm from '../../components/registerForm/RegisterForm';\r\nimport LoginForm from '../../components/loginForm/LoginForm';\r\nimport ResetPasswordForm from '../../components/resetPasswordForm/ResetPasswordForm';\r\nimport './loginPage.scss';\r\n\r\nfunction LoginPage() {\r\n   const [currentForm, setCurrentForm] = useState('login')\r\n   const [isLoading, setIsLoading] = useState(false);\r\n\r\n   const toggleForm = (formName) => {\r\n      setCurrentForm(formName)\r\n   }\r\n\r\n   const showLoader = () => {\r\n      setIsLoading(true)\r\n   }\r\n   const hideLoader = () => {\r\n      setIsLoading(false)\r\n   }\r\n\r\n   const renderSwitch = (param) => {\r\n      switch (param) {\r\n         case 'login':\r\n            return (\r\n               <LoginForm toggleForm={toggleForm} showLoader={showLoader} hideLoader={hideLoader} />\r\n            );\r\n         case 'registration':\r\n            return (\r\n               <RegisterForm toggleForm={toggleForm} showLoader={showLoader} hideLoader={hideLoader} />\r\n            );\r\n         case 'resetPassword':\r\n            return (\r\n               <ResetPasswordForm toggleForm={toggleForm} showLoader={showLoader} hideLoader={hideLoader} />\r\n            );\r\n         default: return null;\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className='loginPage'>\r\n         {isLoading && <Loader />}\r\n         {renderSwitch(currentForm)}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default LoginPage","import { TYPE_TOAST } from \"../constants/typeToast\";\r\nimport { notification } from \"./utils\";\r\n\r\nexport const firebaseErrorMessage = errorMessage => notification(errorMessage.slice(10), TYPE_TOAST.ERROR)","import { toast } from 'react-toastify';\r\nimport * as Scroll from 'react-scroll';\r\n\r\n\r\nexport const discountedPrice = (price, discount) => {\r\n   return price - (price * discount * .01).toFixed(2)\r\n}\r\n\r\nexport const currencyConversion = value => {\r\n   if (value) {\r\n      return `$${value.toFixed(2)}`\r\n   }\r\n}\r\n\r\nexport const notification = (text, type) => {\r\n   toast(text, {\r\n      type: type\r\n   });\r\n}\r\nexport const capitalizeFirstLetter = (string) => {\r\n   if (string) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n   }\r\n}\r\n\r\nexport const scrollToTop = () => {\r\n   let scroll = Scroll.animateScroll;\r\n   scroll.scrollToTop({ delay: 0 });\r\n}"],"names":["TYPE_TOAST","Object","freeze","SUCCESS","INFO","WARNING","ERROR","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","_ref","toggleForm","showLoader","hideLoader","_useState","useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","passwordConfirm","setPasswordConfirm","_jsxs","className","children","_jsx","onSubmit","e","preventDefault","length","notification","createUserWithEmailAndPassword","then","updateProfile","displayName","catch","error","errorMessage","message","firebaseErrorMessage","htmlFor","type","name","value","placeholder","id","onChange","target","autoComplete","onClick","navigate","useNavigate","dispatch","useDispatch","provider","GoogleAuthProvider","successfulResultHandler","userInfo","setActiveUser","userPhoto","photoURL","userId","uid","ROUTES","signInWithPopup","result","user","FcGoogle","signInWithEmailAndPassword","userCredential","sendPasswordResetEmail","currentForm","setCurrentForm","isLoading","setIsLoading","formName","Loader","param","LoginForm","RegisterForm","ResetPasswordForm","renderSwitch","slice","discountedPrice","price","discount","toFixed","currencyConversion","concat","text","toast","capitalizeFirstLetter","string","charAt","toUpperCase","scrollToTop","Scroll","delay"],"sourceRoot":""}